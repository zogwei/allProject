<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jw.ess.mapper.EmployeeMapper">
	<!-- 映射-->
	<resultMap type="Employee" id="employeeMap">
		<id property="id" column="e_id" />
		<result property="account" column="e_account" />
		<result property="password" column="e_password" />
		<result property="name" column="e_name" />
		<result property="sex" column="e_sex" />
		<result property="phone" column="e_phone" />
		<result property="cardNo" column="e_cardNo" />
		<result property="address" column="e_address" />
		<result property="state" column="e_state" />
		<result property="category" column="e_category" />
		<result property="isValid" column="e_isValid" />
		<result property="createdDate" column="e_createdDate" />
		<result property="desc" column="e_desc" />
		<result property="tenantId" column="e_tenantId" />
	</resultMap>

	<!-- 重用sql语句段 -->

	<sql id="employeeColumns">

		id as e_id,account as e_account,password as e_password,
		empName as
		e_name,sex as e_sex,phone as e_phone,address as
		e_address,cardNo as
		e_cardNo,
		state as e_state,category as
		e_category,isValid as
		e_isValid,createdDate as e_createdDate,
		description as e_desc,tenantId
		as e_tenantId
	
	</sql>

	<sql id="pageLimit">
		limit #{beginIndex},#{pageSize}
	</sql>

	<!-- 进行操作的sql -->


	<insert id="insertEmployee" parameterType="Employee"
		useGeneratedKeys="true" keyProperty="id">

		insert into
		tbl_employee(account,password,empName,sex,phone,address,cardNo,
		state,category,isValid,createdDate,description,tenantId)
		values(#{account},#{password},#{name},#{sex},#{phone},#{address},
		#{cardNo},#{state},#{category},#{isValid},#{createdDate},#{desc},#{tenantId})

	</insert>

	<select id="findEmployeeAccount" parameterType="string"
		resultType="string">
		select account
		from tbl_employee where account = #{account}
	</select>

	<select id="findEmployee" parameterType="Employee" resultMap="employeeMap">
		select
		<include refid="employeeColumns" />
		from tbl_employee where account = #{account} and password =
		#{password}
	</select>

	<select id="findEmployees" resultMap="employeeMap"
		parameterType="map">

		select
		<include refid="employeeColumns" />
		from tbl_employee
		<where>
		<if test="tenantId > -1 ">
			tenantId = #{tenantId}
		</if>
		
		<if test="name != null">
			and empName like "%"#{name}"%"
		</if>
		<if test="state > 0">
			and state = #{state}
		</if>
		<if test="category > 0">
			and category =#{category}
		</if>
		<if test="isValid > 0">
			and isValid =#{isValid}
		</if>
		</where>
		<include refid="pageLimit" />
	</select>

	<select id="findCountOfEmployee" parameterType="int" resultType="int">
		select count(*)
		from tbl_employee 
		<where>
		<if test="tenantId > -1 ">
			tenantId = #{tenantId}
		</if>
		
		<if test="name != null">
			and empName like "%"#{name}"%"
		</if>
		<if test="state > 0">
			and state = #{state}
		</if>
		<if test="category > 0">
			and category =#{category}
		</if>
		<if test="isValid > 0">
			and isValid =#{isValid}
		</if>
		</where>
	</select>
	
	<select id="findEmployeeName" parameterType="map" resultType="string">
		select empName from tbl_employee where tenantId = #{tenantId} and empName = #{empName}
	</select>

	<select id="findEmployeeNameExcludeSelf" parameterType="map" resultType="string">
		select empName from tbl_employee where tenantId = #{tenantId} and empName = #{empName} and id != #{employeeId}
	</select>
	
	<select id="findEmployeeById" parameterType="int" resultMap="employeeMap">
		select
		<include refid="employeeColumns" />
		from tbl_employee where id = #{id}
	</select>
	<update id="updateEmployee" parameterType="Employee">
		update tbl_employee
		<set>
		<if test="password != null">
			password=#{password},
		</if>
		<if test="name != null">
			empName=#{name},
		</if>
		<if test="sex > -1">
			sex=#{sex},
		</if>
		<if test="phone != null">
			phone=#{phone},
		</if>
		<if test="address != null">
			address=#{address},
		</if>
		<if test="cardNo != null">
			cardNo=#{cardNo},
		</if>
		<if test="state > 0">
			state=#{state},
		</if>
		<if test="category > 0">
			category=#{category},
		</if>
		<if test="isValid > 0">
			isValid=#{isValid},
		</if>
		<if test="desc != null">
			description=#{desc}
		</if>
		</set>
		where id = #{id}
	</update>
</mapper>